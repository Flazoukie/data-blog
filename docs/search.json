[
  {
    "objectID": "posts/kagglehub-download.html",
    "href": "posts/kagglehub-download.html",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "",
    "text": "kagglehub is a relatively new and more user-friendly package developed by Kaggle to simplify access to datasets, notebooks, and models. The kagglehub Python package offers a cleaner alternative.\nThis guide, quickly created with teh help of ChatGPT, shows you how to download Kaggle datasets in just a few lines of code and save you some messages with the LLM, so you won‚Äôt hit the limit too early while developing your project ;)"
  },
  {
    "objectID": "posts/kagglehub-download.html#what-is-kagglehub",
    "href": "posts/kagglehub-download.html#what-is-kagglehub",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "What is kagglehub?",
    "text": "What is kagglehub?\nkagglehub is a Python package developed by Kaggle that allows you to programmatically download datasets, notebooks, and models."
  },
  {
    "objectID": "posts/kagglehub-download.html#step-1-install-kagglehub",
    "href": "posts/kagglehub-download.html#step-1-install-kagglehub",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "Step 1: Install kagglehub",
    "text": "Step 1: Install kagglehub\npip install kagglehub"
  },
  {
    "objectID": "posts/kagglehub-download.html#step-2-authenticate-with-kaggle",
    "href": "posts/kagglehub-download.html#step-2-authenticate-with-kaggle",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "Step 2: Authenticate with Kaggle",
    "text": "Step 2: Authenticate with Kaggle\nTo use kagglehub, you need a Kaggle API token.\n\nOption A: Save the token file\nGo to your Kaggle account settings: https://www.kaggle.com/account\nScroll to ‚ÄúAPI‚Äù and click ‚ÄúCreate New API Token‚Äù\nSave the downloaded kaggle.json file to:\nLinux/macOS: ~/.kaggle/kaggle.json\nWindows: C:&lt;YourUsername&gt;.kaggle.json\nIf the .kaggle folder doesn‚Äôt exist, create it manually.\n\n\nOption B: Use environment variables\nimport os\n\nos.environ[\"KAGGLE_USERNAME\"] = \"your_username\"\nos.environ[\"KAGGLE_KEY\"] = \"your_key\"\nReplace ‚Äúyour_username‚Äù and ‚Äúyour_key‚Äù with your API credentials from kaggle.json."
  },
  {
    "objectID": "posts/kagglehub-download.html#step-3-download-a-dataset",
    "href": "posts/kagglehub-download.html#step-3-download-a-dataset",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "Step 3: Download a Dataset",
    "text": "Step 3: Download a Dataset\nHere‚Äôs how to download your dataset:\nimport kagglehub\n\npath = kagglehub.dataset_download(\"yourdataset\")\n\nprint(\"Dataset downloaded to:\", path)\nThe dataset is automatically downloaded and unzipped into a cache directory (usually ~/.cache/kagglehub/)."
  },
  {
    "objectID": "posts/kagglehub-download.html#step-4-explore-the-files",
    "href": "posts/kagglehub-download.html#step-4-explore-the-files",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "Step 4: Explore the Files",
    "text": "Step 4: Explore the Files\nimport os\n\nfor file in os.listdir(path):\n    print(file)"
  },
  {
    "objectID": "posts/kagglehub-download.html#bonus-reusability-and-automation",
    "href": "posts/kagglehub-download.html#bonus-reusability-and-automation",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "Bonus: Reusability and Automation",
    "text": "Bonus: Reusability and Automation\n\nkagglehub also works for notebooks and models.\nFiles are cached and won‚Äôt be redownloaded unless updated.\nGreat for use in automated workflows or reproducible projects."
  },
  {
    "objectID": "posts/kagglehub-download.html#conclusion",
    "href": "posts/kagglehub-download.html#conclusion",
    "title": "How to Download Datasets from Kaggle Using kagglehub",
    "section": "Conclusion",
    "text": "Conclusion\nkagglehub is a simple, effective alternative to the Kaggle CLI, especially for Python users who prefer to keep everything in code. With just a few lines, you can grab datasets and start analyzing!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my blog! Here is where I share my journey in data science through hands-on projects, tutorials, and reflections. I hope you‚Äôll find something useful, inspiring, or entertaining for you here."
  },
  {
    "objectID": "about.html#about-this-blog",
    "href": "about.html#about-this-blog",
    "title": "About",
    "section": "",
    "text": "Welcome to my blog! Here is where I share my journey in data science through hands-on projects, tutorials, and reflections. I hope you‚Äôll find something useful, inspiring, or entertaining for you here."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "About Me",
    "text": "About Me\nMy name is Flavia and I am currently a data scientist based in Hamburg, Germany. I also have a PhD in philosophy and research experience in empirical psychology. Both taught me useful skills that now I like to apply outside academia. I‚Äôm also a Brazilian Zouk dance teacher and event organizer. If you are curious about my dance life, you can visit Share Zouk Hamburg.\nThis blog brings together my curiosity, creativity, and desire to share knowledge. Thanks for visiting!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Blog!",
    "section": "",
    "text": "How to Download Datasets from Kaggle Using kagglehub\n\n\n\nPython\n\nData\n\nTools\n\n\n\nA step-by-step guide to downloading Kaggle datasets with the new kagglehub Python package.\n\n\n\n\n\nMay 15, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nHow to Create a Blog Using Quarto\n\n\n\ntutorial\n\nquarto\n\ngithub\n\nblogging\n\n\n\nLearn how to set up your own stylish data blog using Quarto and GitHub Pages ‚Äî no advanced web skills required.\n\n\n\n\n\nMay 11, 2025\n\n\nFlavia Felletti\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/how-to-create-a-blog.html",
    "href": "posts/how-to-create-a-blog.html",
    "title": "How to Create a Blog Using Quarto",
    "section": "",
    "text": "Creating your own blog is a great way to share your data projects. With Quarto and GitHub Pages, you can easily publish a professional-looking blog for free, using simple Markdown and code.\nThis setup is ideal for:\n\nShowcasing data science or programming projects\nWriting technical tutorials (like this ;) )\nMaintaining a lightweight, fast, and version-controlled website\n\nIn this tutorial, I‚Äôll walk you through how to create your blog step by step using Quarto and GitHub Pages."
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#introduction",
    "href": "posts/how-to-create-a-blog.html#introduction",
    "title": "How to Create a Blog Using Quarto",
    "section": "",
    "text": "Creating your own blog is a great way to share your data projects. With Quarto and GitHub Pages, you can easily publish a professional-looking blog for free, using simple Markdown and code.\nThis setup is ideal for:\n\nShowcasing data science or programming projects\nWriting technical tutorials (like this ;) )\nMaintaining a lightweight, fast, and version-controlled website\n\nIn this tutorial, I‚Äôll walk you through how to create your blog step by step using Quarto and GitHub Pages."
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#what-youll-need",
    "href": "posts/how-to-create-a-blog.html#what-youll-need",
    "title": "How to Create a Blog Using Quarto",
    "section": "üß∞ What You‚Äôll Need",
    "text": "üß∞ What You‚Äôll Need\n\nTechnical Requirements\n\nInstall Quarto Quarto is the publishing engine. You can write in Markdown, embed code, and produce beautiful web pages, one great thing about Quarto is that it supports various languages like R, Python, Julia, and Observable JavaScript. Download and install it from the official site.\nCreate a GitHub account (if you don‚Äôt have one yet) You‚Äôll use GitHub to host your website for free via GitHub Pages.\nInstall Git (if not already installed) Quarto uses Git to publish your site to GitHub. Install Git and set it up locally.\n\n\nOptional but helpful: A code editor like VS Code or PyCharm makes writing .qmd files easier, but it‚Äôs not required. I am personally using PyCharm Community Edition (the free version of PyCharm) Download PyCharm."
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#step-by-step-create-your-blog",
    "href": "posts/how-to-create-a-blog.html#step-by-step-create-your-blog",
    "title": "How to Create a Blog Using Quarto",
    "section": "üöÄ Step-by-Step: Create Your Blog",
    "text": "üöÄ Step-by-Step: Create Your Blog\nWe‚Äôll now create and publish your blog in just a few steps.\n\n\n1. Create a New Quarto Website\nOpen your terminal and run the following command:\nquarto create-project my-blog --type website\ncd my-blog\nThis creates a new folder called ‚Äúmy-blog‚Äù with the basic structure of a Quarto website. You can rename my-blog to whatever you want. You should now have gotten the following files:\n\nindex.qmd (your homepage)\nabout.qmd (your About page)\n_quarto.yml (the configuration file that defines your site layout and style)\nA posts/ folder to hold your blog posts\n\n\nIf you didn‚Äôt get a posts/ folder, create it manually. You will need it to hold all your blog posts!\n\n\n\n2. Preview Your Website Locally\nTo check if everything worked correctly, run the following command to see your site in your browser:\nquarto preview\nThis launches a localhost preview. Any time you change a .qmd file and save it, the preview updates automatically. Remember, this is not your site yet, but just a local preview. Next I will guide you through creating a proper site using GitHub Pages.\n\n\n3. Configure the Site for GitHub Pages\nTo publish your site using GitHub Pages, you need to configure Quarto to render your output into a folder named docs/.\nIn the root of your project, open the _quarto.yml file and modify or add the following line:\nproject:\n  type: website\n  output-dir: docs\nThen render your site:\nquarto render\nQuarto will generate the site in a docs/ folder, which GitHub Pages can use for publishing.\n\n\n4. Push Your Site to GitHub\nCreate a new repository on GitHub (e.g., ‚Äúmy-blog‚Äù)\nInitialize Git and link your local project to your GitHub repo:\ngit init\ngit remote add origin https://github.com/yourusername/my-blog.git\ngit add .\ngit commit -m \"Initial commit\"\ngit push -u origin main\nDon‚Äôt forget to replace ‚Äúyourusername‚Äù with your actual username and ‚Äúmy-blog‚Äù with your actual blog name ;). üîê If you‚Äôre using HTTPS, GitHub will ask you for a token instead of a password. You can generate one here.\n\n\n5. Enable GitHub Pages\n\nGo to your GitHub repository\nClick on Settings ‚Üí Pages\nUnder Source, select:\n\n\nBranch: main\nFolder: /docs\n\nClick Save. After a few seconds, your site will be live at: https://yourusername.github.io/data-blog/\n\nNote: This is the path I chose to publish my blog, however there are alternative ways to do it, which may better satisfy your requirements, have a look here: GitHub Pages for Quarto."
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#create-your-first-blog-post",
    "href": "posts/how-to-create-a-blog.html#create-your-first-blog-post",
    "title": "How to Create a Blog Using Quarto",
    "section": "‚úçüèø Create Your First Blog Post",
    "text": "‚úçüèø Create Your First Blog Post\nIf you do not have a folder for your posts already, create a new one. I keep my posts inside the folder ‚Äúposts‚Äù, within my own project folder DataBlog. Now you can create a new file, which will become your first post. For example:\nposts/how-to-create-a-data-blog.qmd\nYou can start with this YAML header and modify it accordingly with your needs:\n---\ntitle: \"My first post title\"\ndate: 2025-05-11\ncategories: [tutorial, quarto, github, blogging]\nformat:\n  html:\n    toc: true\n    code-tools: true\n    theme: cosmo\n---\nThen write your content below using Markdown and code blocks as needed.\nWhen ready, render the site again:\nquarto render\nNow push the changes to GitHub:\ngit add .\ngit commit -m \"Add first blog post\"\ngit push\nVisit your blog again ‚Äî Congratulations, your new post is live! ‚úåüèø"
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#remove-the-demo-post",
    "href": "posts/how-to-create-a-blog.html#remove-the-demo-post",
    "title": "How to Create a Blog Using Quarto",
    "section": "üóëÔ∏è Remove the Demo Post",
    "text": "üóëÔ∏è Remove the Demo Post\nWhen you create a new Quarto website project, it often comes with a demo blog post inside the posts/ folder. This is just a placeholder to show you how blog posts work. It usually has a name like:\nposts/welcome/index.qmd\n‚ÄúYou‚Äôll probably want to remove the demo post to keep your site clean. I removed them manually from Pycharm, but you can removed them from your terminal using a command like:\nrm posts/welcome/index.qmd\nDon‚Äôt forget not to render and commit!\nquarto render\ngit add .\ngit commit -m \"Remove demo post\"\ngit push"
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#customize-the-site",
    "href": "posts/how-to-create-a-blog.html#customize-the-site",
    "title": "How to Create a Blog Using Quarto",
    "section": "üé® Customize the Site",
    "text": "üé® Customize the Site\nNow you may want to customize the site. To do this, you need to change the _quarto.yml file. Open it and change title, navigation bar, theme, and styling according to your wishes.\nFor example:\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"My Blog\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\nüß© Optional: Add an Image and About Info\nWrite a small biography in about.qmd. and add a personal image. Here you can also add your contacts.\nThis is how my about.qmd looks like:\n---\ntitle: \"About\"\nimage: flavia_cartoon.png\nabout:\n  template: jolla\n  links:\n    - icon: linkedin\n      text: LinkedIn\n      href: https://www.linkedin.com/in/flavia-felletti-phd-8066141b8/\n    - icon: github\n      text: Github\n      href: https://github.com/Flazoukie\n\n---\n\n## About This Blog\n\nWelcome to my blog! Here is where I share my journey in data science through hands-on projects, tutorials, and reflections.\nI hope you'll find something useful, inspiring, or entertaining for you here.\nFeel free to take inspiration!\nEnsure the image is copied into the docs/ folder so it shows up on GitHub Pages. Remember now to render to turn your Markdown files into a working website:\nquarto render\nThis generates a docs/ folder with all the HTML files that make up your website.\nDon‚Äôt forget to commit and push to GitHub to apply teh changes to your website!\ngit add .\ngit commit -m \"Customize the website\"\ngit push"
  },
  {
    "objectID": "posts/how-to-create-a-blog.html#wrap-up",
    "href": "posts/how-to-create-a-blog.html#wrap-up",
    "title": "How to Create a Blog Using Quarto",
    "section": "‚úÖ Wrap-Up",
    "text": "‚úÖ Wrap-Up\nCongratulations! üéâ You now have a working blog hosted for free, using Quarto and GitHub Pages.\nIf you found this guide helpful, or want to give me your feedback, feel free to connect on LinkedIn or explore more on this blog.\nHappy blogging!"
  },
  {
    "objectID": "posts/data_science_jobs.html",
    "href": "posts/data_science_jobs.html",
    "title": "My Post Title",
    "section": "",
    "text": "# load libraries\n\n# get data from Kaggle using kagglehub and Kaggle API token\nimport kagglehub\nimport os\nos.environ[\"KAGGLE_USERNAME\"] = \"flaphilde\"\nos.environ[\"KAGGLE_KEY\"] = \"d1e20e1b44bdd448484ec144874c4f61\"\n\n\nimport kagglehub\n\n# Download the dataset\npath = kagglehub.dataset_download(\"asaniczka/data-science-job-postings-and-skills\")\n\nprint(\"Path to dataset files:\", path)\n\nDownloading from https://www.kaggle.com/api/v1/datasets/download/asaniczka/data-science-job-postings-and-skills?dataset_version_number=2...\n\n\n100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 19.4M/19.4M [00:02&lt;00:00, 9.70MB/s]\n\n\nExtracting files...\n\n\n\n\n\nPath to dataset files: C:\\Users\\flavi\\.cache\\kagglehub\\datasets\\asaniczka\\data-science-job-postings-and-skills\\versions\\2\n\n\n\nimport os\n\nfor file in os.listdir(path):\n    print(file)\n\njob_postings.csv\njob_skills.csv\njob_summary.csv"
  }
]